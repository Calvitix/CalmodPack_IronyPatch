district_rw_ascended_housing = {
    base_buildtime = 900
    is_capped_by_modifier = yes
    show_on_uncolonized = {
        has_district_rw_ascended_housing = yes
        uses_district_set = ring_world
    }
    potential = {
        has_district_rw_ascended_housing = yes
        uses_district_set = ring_world
    }
    conversion_ratio = 1
    convert_to = {
        district_rw_nexus
        district_rw_hive
        district_rw_city
    }
    resources = {
        category = planet_districts
        cost = {
            trigger = {
                from = {
                    is_ai = no
                }
            }
            alloys = 50
            minerals = 3000
        }
        cost = {
            trigger = {
                from = {
                    is_ai = yes
                }
            }
            minerals = 3000
        }
        upkeep = {
            energy = 15
        }
    }
    planet_modifier = {
        planet_housing_add = 80
        job_enforcer_add = 2
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_valid_civic = civic_agrarian_idyll
            }
        }
        modifier = {
            planet_housing_add = -10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_1
            }
        }
        modifier = {
            planet_housing_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_2
            }
        }
        modifier = {
            planet_housing_add = 10
        }
    }
    ai_weight = {
        weight = 5
        modifier = {
            factor = 25
            need_housing = yes
        }
        modifier = {
            factor = 0
            free_housing > 2
        }
    }
    ai_resource_production = {
        consumer_goods = 5
        trigger = {
            always = yes
        }
    }
}
