@rw_cost = 2000
@rw_maintenance = 10
@rw_district_buildtime = 600
district_rw_city = {
    base_buildtime = @rw_district_buildtime
    is_capped_by_modifier = no
    show_on_uncolonized = {
        exists = from
        from = {
            is_regular_empire = yes
        }
        has_district_rw_city = yes
        uses_district_set = ring_world
    }
    potential = {
        exists = owner
        owner = {
            is_regular_empire = yes
        }
        has_district_rw_city = yes
        uses_district_set = ring_world
    }
    conversion_ratio = 0.5
    convert_to = {
        district_rw_nexus
        district_rw_hive
    }
    resources = {
        category = planet_districts
        cost = {
            minerals = @rw_cost
        }
        upkeep = {
            energy = @rw_maintenance
        }
    }
    planet_modifier = {
        planet_housing_add = 50
        job_enforcer_add = 1
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_valid_civic = civic_agrarian_idyll
            }
        }
        modifier = {
            planet_housing_add = -10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_policy_flag = do_rural_housing
            }
        }
        modifier = {
            planet_housing_add = -20
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_policy_flag = do_centralized_housing
            }
        }
        modifier = {
            job_clerk_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_non_swapped_tradition = tr_prosperity_public_works
            }
        }
        modifier = {
            planet_housing_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_1
            }
        }
        modifier = {
            planet_housing_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_technology = tech_housing_2
                NOT = {
                    has_valid_civic = civic_agrarian_idyll
                }
            }
        }
        modifier = {
            planet_housing_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_non_swapped_tradition = tr_prosperity_interstellar_franchising
            }
        }
        modifier = {
            job_clerk_add = 10
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            OR = {
                owner = {
                    NOT = {
                        has_ascension_perk = ap_mind_over_matter
                    }
                }
                NOT = {
                    has_planet_flag = built_one_psi_corps
                }
            }
        }
        modifier = {
            job_enforcer_add = 1
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            OR = {
                owner = {
                    has_ascension_perk = ap_mind_over_matter
                }
                has_planet_flag = built_one_psi_corps
            }
        }
        modifier = {
            job_telepath_add = 1
        }
    }
    triggered_desc = {
        trigger = {
            exists = owner
            owner = {
                is_regular_empire = yes
            }
        }
        text = job_clerk_effect_desc
    }
    ai_weight = {
        weight = 4
        modifier = {
            factor = 25
            need_housing = yes
        }
        modifier = {
            factor = 0
            free_housing > 2
        }
    }
    ai_resource_production = {
        consumer_goods = 4
        trigger = {
            always = yes
        }
    }
}
