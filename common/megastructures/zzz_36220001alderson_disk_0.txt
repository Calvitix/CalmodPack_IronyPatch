alderson_disk_0 = {
    entity = "giga_consite_7_7_entity"
    construction_entity = "giga_consite_7_7_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = yes
    prerequisites = {
        giga_tech_alderson_disk
    }
    build_time = 1200
    resources = {
        category = megastructures
        cost = {
            alloys = 5000
            influence = 100
        }
        upkeep = {
            energy = 10
        }
    }
    potential = {
        has_technology = giga_tech_alderson_disk
        has_ascension_perk = ap_slice_of_life
        NOT = {
            has_global_flag = alderson_disabled
        }
        OR = {
            check_variable = {
                which = giga_alderson_cap
                value = 0
            }
            check_variable = {
                which = giga_current_alderson
                value < giga_alderson_cap
            }
        }
    }
    possible = {
        custom_tooltip = {
            fail_text = "requires_inside_border"
            is_inside_border = from
        }
        custom_tooltip = {
            fail_text = "requires_surveyed_system"
            giga_system_is_surveyed = yes
        }
        custom_tooltip = {
            fail_text = "requires_no_binary_trinary"
            giga_is_bitrinary = no
        }
        custom_tooltip = {
            fail_text = "requires_no_habitable_planets"
            giga_any_hab_planets = no
        }
        custom_tooltip = {
            fail_text = "requires_standard_star_class"
            giga_is_standard_system = yes
        }
        custom_tooltip = {
            fail_text = "requires_no_existing_megastructure"
            has_no_non_gate_megastructure = yes
        }
        custom_tooltip = {
            fail_text = "requires_not_capped"
            from = {
                OR = {
                    check_variable = {
                        which = giga_alderson_cap
                        value = 0
                    }
                    check_variable = {
                        which = giga_current_alderson
                        value < giga_alderson_cap
                    }
                }
            }
        }
    }
    placement_rules = {
        planet_possible = {
            custom_tooltip = {
                fail_text = "requires_no_existing_megastructure"
                planet_has_no_megastructure = yes
            }
            custom_tooltip = {
                fail_text = "must_build_around_star"
                is_star = yes
            }
            custom_tooltip = {
                fail_text = "requires_no_anomaly"
                has_anomaly = no
            }
        }
    }
    ai_weight = {
        weight = 300
        modifier = {
            factor = 0.1
            any_neighbor_system = {
                exists = owner
                NOT = {
                    owner = {
                        is_same_value = from
                    }
                }
            }
        }
        modifier = {
            factor = 0.5
            any_neighbor_system = {
                any_neighbor_system = {
                    exists = owner
                    NOT = {
                        owner = {
                            is_same_value = from
                        }
                    }
                }
            }
        }
        modifier = {
            factor = 0.00
            from = {
                check_variable = {
                    which = completed_alderson
                    value = 1
                }
            }
        }
        modifier = {
            factor = 0.00
            from = {
                has_country_flag = giga_started_alderson
            }
        }
    }
    on_build_complete = {
        save_event_target_as = giga_system
        from = {
            country_event = {
                id = giga_dialog.2502
            }
        }
        from = {
            set_country_flag = giga_started_alderson
            change_variable = {
                which = giga_current_alderson
                value = 1
            }
        }
        set_variable = {
            which = alderson_slices
            value = 0
        }
        fromfrom.planet = {
            if = {
                limit = {
                    exists = orbital_station
                }
                orbital_station = {
                    dismantle = yes
                }
            }
            set_planet_flag = megastructure
            set_planet_flag = has_megastructure
        }
    }
}
