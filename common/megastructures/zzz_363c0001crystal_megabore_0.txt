crystal_megabore_0 = {
    entity = "giga_consite_5_5_entity"
    construction_entity = "giga_consite_5_5_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    prerequisites = {
        giga_tech_crystal_megabore
    }
    build_time = 2000
    resources = {
        category = megastructures
        cost = {
            alloys = 5000
            influence = 75
        }
        upkeep = {
            energy = 5
        }
    }
    potential = {
        has_technology = giga_tech_crystal_megabore
        NOT = {
            has_global_flag = crystal_disabled
        }
        OR = {
            check_variable = {
                which = giga_crystal_cap
                value = 0
            }
            check_variable = {
                which = giga_current_crystal
                value < giga_crystal_cap
            }
        }
    }
    possible = {
        custom_tooltip = {
            fail_text = "requires_inside_border"
            is_inside_border = from
        }
        custom_tooltip = {
            fail_text = "requires_not_capped"
            from = {
                OR = {
                    check_variable = {
                        which = giga_crystal_cap
                        value = 0
                    }
                    check_variable = {
                        which = giga_current_crystal
                        value < giga_crystal_cap
                    }
                }
            }
        }
    }
    placement_rules = {
        planet_possible = {
            custom_tooltip = {
                fail_text = "requires_larger_planet"
                planet_size >= 6
            }
            custom_tooltip = {
                fail_text = "requires_no_anomaly"
                has_anomaly = no
            }
            custom_tooltip = {
                fail_text = "must_build_around_molten"
                OR = {
                    is_planet_class = pc_molten
                    is_planet_class = pc_diamond
                }
            }
            custom_tooltip = {
                fail_text = "requires_no_existing_megastructure"
                planet_has_no_megastructure = yes
            }
            custom_tooltip = {
                fail_text = "requires_survey_not_habitable"
                is_surveyed = {
                    who = prev.from
                    status = yes
                }
                colonizeable_planet = no
            }
            custom_tooltip = {
                fail_text = "requires_not_asteroid"
                is_asteroid = no
            }
            custom_tooltip = {
                fail_text = "requires_not_star"
                is_star = no
            }
        }
    }
    ai_weight = {
        weight = 100
        modifier = {
            factor = 1.00
            chk_afford_energy_10 = yes
        }
        modifier = {
            factor = 0.90
            chk_afford_energy_09 = yes
        }
        modifier = {
            factor = 0.80
            chk_afford_energy_08 = yes
        }
        modifier = {
            factor = 0.70
            chk_afford_energy_07 = yes
        }
        modifier = {
            factor = 0.60
            chk_afford_energy_06 = yes
        }
        modifier = {
            factor = 0.50
            chk_afford_energy_05 = yes
        }
        modifier = {
            factor = 0.40
            chk_afford_energy_04 = yes
        }
        modifier = {
            factor = 0.30
            chk_afford_energy_03 = yes
        }
        modifier = {
            factor = 0.20
            chk_afford_energy_25 = yes
        }
        modifier = {
            factor = 0.10
            chk_afford_energy_02 = yes
        }
        modifier = {
            factor = 0.00
            chk_afford_energy_15 = yes
        }
        modifier = {
            factor = 3.75
            chk_needs_rare_crystals_10 = yes
        }
        modifier = {
            factor = 3.50
            chk_needs_rare_crystals_09 = yes
        }
        modifier = {
            factor = 3.25
            chk_needs_rare_crystals_08 = yes
        }
        modifier = {
            factor = 3.00
            chk_needs_rare_crystals_07 = yes
        }
        modifier = {
            factor = 2.75
            chk_needs_rare_crystals_06 = yes
        }
        modifier = {
            factor = 2.50
            chk_needs_rare_crystals_05 = yes
        }
        modifier = {
            factor = 2.25
            chk_needs_rare_crystals_04 = yes
        }
        modifier = {
            factor = 2.00
            chk_needs_rare_crystals_03 = yes
        }
        modifier = {
            factor = 1.75
            chk_needs_rare_crystals_25 = yes
        }
        modifier = {
            factor = 1.50
            chk_needs_rare_crystals_02 = yes
        }
        modifier = {
            factor = 1.25
            chk_needs_rare_crystals_15 = yes
        }
        modifier = {
            factor = 3.75
            chk_needs_minerals_10 = yes
        }
        modifier = {
            factor = 3.50
            chk_needs_minerals_09 = yes
        }
        modifier = {
            factor = 3.25
            chk_needs_minerals_08 = yes
        }
        modifier = {
            factor = 3.00
            chk_needs_minerals_07 = yes
        }
        modifier = {
            factor = 2.75
            chk_needs_minerals_06 = yes
        }
        modifier = {
            factor = 2.50
            chk_needs_minerals_05 = yes
        }
        modifier = {
            factor = 2.25
            chk_needs_minerals_04 = yes
        }
        modifier = {
            factor = 2.00
            chk_needs_minerals_03 = yes
        }
        modifier = {
            factor = 1.75
            chk_needs_minerals_25 = yes
        }
        modifier = {
            factor = 1.50
            chk_needs_minerals_02 = yes
        }
        modifier = {
            factor = 1.25
            chk_needs_minerals_15 = yes
        }
        modifier = {
            factor = 0.5
            any_neighbor_system = {
                exists = owner
                NOT = {
                    owner = {
                        is_same_value = from
                    }
                }
            }
        }
        modifier = {
            factor = 0.00
            from = {
                has_country_flag = has_recently_built_crystal_megabore
            }
        }
        modifier = {
            factor = 0.00
            from = {
                count_owned_megastructure = {
                    limit = {
                        is_megastructure_type = crystal_megabore_3
                    }
                    count > 2
                }
            }
        }
        modifier = {
            factor = 0.33
            from = {
                count_owned_megastructure = {
                    limit = {
                        is_megastructure_type = crystal_megabore_3
                    }
                    count = 2
                }
            }
        }
        modifier = {
            factor = 0.66
            from = {
                count_owned_megastructure = {
                    limit = {
                        is_megastructure_type = crystal_megabore_3
                    }
                    count = 1
                }
            }
        }
        modifier = {
            factor = 0
            from = {
                OR = {
                    has_megastructure = crystal_megabore_0
                    has_megastructure = crystal_megabore_1
                    has_megastructure = crystal_megabore_2
                }
            }
        }
    }
    on_build_complete = {
        save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
        from = {
            set_timed_country_flag = {
                flag = has_recently_built_crystal_megabore
                years = 20
            }
            country_event = {
                id = giga_dialog.3501
            }
            change_variable = {
                which = giga_current_crystal
                value = 1
            }
        }
        fromfrom.planet = {
            if = {
                limit = {
                    exists = orbital_station
                }
                orbital_station = {
                    dismantle = yes
                }
            }
            set_planet_flag = megastructure
            set_planet_flag = has_megastructure
        }
    }
}
