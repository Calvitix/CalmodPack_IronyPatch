frame_maintenance_overseer = {
    category = complex_drone
    condition_string = DRONE_JOB_TRIGGER
    building_icon = building_maintenance_depot
    icon = maintenance_drone
    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }
    resources = {
        category = planet_jobs
        produces = {
            trigger = {
                exists = owner
                owner = {
                    has_valid_civic = civic_machine_maintenance_protocols
                }
            }
            unity = 3
        }
        upkeep = {
            energy = 4
        }
    }
    possible_precalc = can_fill_drone_job
    possible = {
        NOT = {
            has_trait = trait_nerve_stapled
        }
    }
    planet_modifier = {
        planet_amenities_no_happiness_add = 12
        planet_jobs_simple_drone_produces_mult = 0.01
    }
    triggered_planet_modifier = {
        potential = {
            OR = {
                has_trait = trait_robot_emotion_emulators
                has_trait = trait_charismatic
            }
        }
        modifier = {
            planet_amenities_no_happiness_add = 3
        }
    }
    triggered_planet_modifier = {
        potential = {
            OR = {
                has_trait = trait_robot_uncanny
                has_trait = trait_repugnant
            }
        }
        modifier = {
            planet_amenities_no_happiness_add = -3
        }
    }
    weight = {
        weight = @complex_drone_job_weight
        modifier = {
            factor = 1.1
            OR = {
                has_trait = trait_robot_emotion_emulators
                has_trait = trait_charismatic
            }
        }
        modifier = {
            factor = 0.5
            OR = {
                has_trait = trait_robot_uncanny
                has_trait = trait_repugnant
            }
        }
        modifier = {
            factor = 1.1
            OR = {
                has_trait = trait_traditional
                has_trait = trait_robot_propaganda_machines
            }
            exists = owner
            owner = {
                has_valid_civic = civic_machine_maintenance_protocols
            }
        }
        modifier = {
            factor = 0.85
            has_trait = trait_necrophage
        }
        modifier = {
            factor = 10
            NOT = {
                has_job = frame_maintenance_overseer
            }
            planet = {
                free_amenities < 3
            }
        }
        modifier = {
            factor = 10
            has_job = frame_maintenance_overseer
            planet = {
                free_amenities < 8
            }
        }
    }
}
