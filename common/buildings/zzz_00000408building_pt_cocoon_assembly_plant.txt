building_pt_cocoon_assembly_plant = {
    base_buildtime = @b1_time
    base_cap_amount = 2
    category = pop_assembly
    potential = {
        exists = owner
        OR = {
            owner = {
                is_ai = no
            }
            free_building_slots > 0
        }
        owner = {
            has_ascension_perk = ap_total_assimilation
            has_authority = auth_hive_mind
        }
        NOT = {
            has_modifier = slave_colony
        }
        OR = {
            is_homeworld = yes
            is_hive_world = yes
        }
    }
    allow = {
        OR = {
            owner = {
                is_ai = no
            }
            AND = {
                num_buildings = {
                    type = any
                    value <= 14
                }
                NOT = {
                    is_planet_class = pc_habitat
                }
            }
        }
    }
    destroy_trigger = {
        exists = owner
        OR = {
            has_modifier = slave_colony
            AND = {
                owner = {
                    is_ai = yes
                }
                free_jobs < 1
                OR = {
                    num_buildings = {
                        type = any
                        value = 16
                    }
                    is_planet_class = pc_habitat
                }
            }
        }
    }
    planet_modifier = {
        job_pt_cocoon_spinner_add = 1
    }
    resources = {
        category = planet_buildings
        cost = {
            food = 1000
        }
        upkeep = {
            energy = 5
            food = 5
        }
    }
    triggered_desc = {
        text = job_pt_cocoon_spinner_effect_desc
    }
    ai_weight = {
        weight = 50000
        modifier = {
            factor = 0
            OR = {
                is_planet_class = pc_habitat
                is_planet_class = pc_city
                num_buildings = {
                    type = any
                    value >= 14
                }
            }
        }
    }
}
